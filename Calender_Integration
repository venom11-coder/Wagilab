from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
import pickle
import os
import datetime
from googleapiclient.discovery import build


SCOPES = ['https://www.googleapis.com/auth/calendar.readonly']

def main():
    # creates variable to store credentials 
    creds= None
    # credentials exist creates json file to store
    if os.path.exists("creds.json"):
        print("json file found")
        creds= Credentials.from_authorized_user_file('creds.json', SCOPES)

        # requests for credentials if incorrect or invalid 
        if  not creds or not creds.valid or creds.expired:
            try:
               creds.refresh(Request)
            except Exception as e:
                print("Unable to refresh!")
                os.remove("creds.json deleted!")
                creds=None

        else:
             
            flow= InstalledAppFlow .from_client_secrets_file('creds.json, SCOPES')
            creds= flow.run_local_server(port=0)

            print("Client Authentication successful!")

   # creating calender service
    service= build('Calender', 'v3', credentials=creds)
    # aware of the timezone
    current= datetime.datetime.now(datetime.timezone.utc).isoformat() 

    events = service.events().list(calenderID= 'primary', timeMin='now', maxresult=15, singleEvents='True', orderBy='startTime').execute()
    
    # if no events found
    if not events:
        print("no events coming!")

    # if events are found then prints the event name and summary
    else:
     print("Upcoming Events.......")
     for event in events:
         start= event['Start'].get('dateTime', event['Start'].get('date'))
         print(start, "event=", event.get('Summary'))
         



        


            


